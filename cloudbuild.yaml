# Copyright 2020 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# [START cloudbuild_angular]
steps:
  # Install dependencies
  - name: node:14
    entrypoint: npm
    args: ["install", "--prefix", "HTML"]
    id: "dependencies-install"
  # install angular cli
  - name: node:14
    entrypoint: npm
    args: ["install", "-g", "@angular/cli"]
    id: "angular-cli-install"
  # build angular
  - name: node:14
    entrypoint: npm
    args: ['run','ng','build']
    dir: HTML
    waitFor: ["dependencies-install", "angular-cli-install"]

  # deploy angular
  - name: "gcr.io/google.com/cloudsdktool/cloud-sdk"
    entrypoint: "bash"
    args:
      [
        "-c",
        "gcloud config set app/cloud_build_timeout 1600 && gcloud app deploy app.yaml --no-promote",
      ]
    dir: HTML
    timeout: "1600s"
  # [END cloudbuild_angular]

  # [START cloudbuild_python_dependencies_yaml]
  # Install dependencies
  - name: python
    entrypoint: pip
    args: ["install", "-r", "requirements.txt", "--user"]
    dir: backend
  # [END cloudbuild_python_dependencies_yaml]

  # [START cloudbuild_python_image_yaml]
  # Docker Build
  - name: "gcr.io/cloud-builders/docker"
    args:
      [
        "build",
        "--cache-from",
        "gcr.io/${PROJECT_ID}/${_SERVICE_NAME}:latest",
        "-t",
        "gcr.io/${PROJECT_ID}/${_SERVICE_NAME}",
        ".",
      ]
    dir: backend
  # [END cloudbuild_python_image_yaml]

  # [START cloudbuild_python_push_yaml]
  # Docker push to container images
  - name: "gcr.io/cloud-builders/docker"
    args: ["push", "gcr.io/${PROJECT_ID}/${_SERVICE_NAME}"]
    dir: backend
  # [END cloudbuild_python_push_yaml]

  # [START cloudbuild_python_deploy_yaml]
  # Deploy to Cloud Run
  - name: "gcr.io/google.com/cloudsdktool/cloud-sdk"
    entrypoint: gcloud
    args:
      [
        "run",
        "deploy",
        "${_SERVICE_NAME}",
        "--image",
        "gcr.io/${PROJECT_ID}/${_SERVICE_NAME}",
        "--region",
        "asia-southeast1",
        "--platform",
        "managed",
        '--set-env-vars', 'PUBSUB_VERIFICATION_TOKEN=${_PUBSUB_VERIFICATION_TOKEN}',
        '--set-env-vars', 'PUBSUB_TOPIC=${_PUBSUB_TOPIC}',
        '--set-env-vars', 'GOOGLE_CLOUD_PROJECT=${_GOOGLE_CLOUD_PROJECT}',
        "--allow-unauthenticated",
      ]
    dir: backend
# [END cloudbuild_python_deploy_yaml]
substitutions:
  _SERVICE_NAME: test-scm-google-cloud
  _PUBSUB_VERIFICATION_TOKEN: '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
  _PUBSUB_TOPIC: 'scm-topic-06-01-2022'
  _GOOGLE_CLOUD_PROJECT: 'hybrid-cabinet-336703'
# [END cloudbuild_python_yaml]
